{
    "sourceFile": "lib/data/models/grafico_pilha.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1729028374776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1729028425653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,12 @@\n import 'package:flutter/material.dart';\r\n import 'package:fl_chart/fl_chart.dart';\r\n+import 'package:flutter/material.dart';\r\n+import 'package:fl_chart/fl_chart.dart';\r\n+import 'package:task_manager_flutter/data/models/cotacao_model.dart';\r\n+import 'package:task_manager_flutter/data/services/cotacao_caller.dart';\r\n \r\n-class Cotacao {\r\n-  int? id;\r\n-  String? ativo;\r\n-  DateTime? dtCotacao;\r\n-  double? valor;\r\n \r\n-  Cotacao({this.id, this.ativo, this.dtCotacao, this.valor});\r\n-}\r\n-\r\n class CotacaoChart extends StatelessWidget {\r\n   final List<Cotacao> cotacoes;\r\n \r\n   const CotacaoChart({Key? key, required this.cotacoes}) : super(key: key);\r\n"
                },
                {
                    "date": 1729028481499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,7 @@\n import 'package:flutter/material.dart';\r\n import 'package:fl_chart/fl_chart.dart';\r\n-import 'package:flutter/material.dart';\r\n-import 'package:fl_chart/fl_chart.dart';\r\n import 'package:task_manager_flutter/data/models/cotacao_model.dart';\r\n-import 'package:task_manager_flutter/data/services/cotacao_caller.dart';\r\n \r\n class CotacaoChart extends StatelessWidget {\r\n   final List<Cotacao> cotacoes;\r\n \r\n"
                },
                {
                    "date": 1729028505232,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n               Cotacao cotacao = entry.value;\r\n               return FlSpot(index.toDouble(), cotacao.valor ?? 0);\r\n             }).toList(),\r\n             isCurved: true,\r\n-            colors: [Colors.blue],\r\n+          //  colors: [Colors.blue],\r\n             dotData: FlDotData(show: false),\r\n             belowBarData: BarAreaData(show: false),\r\n           ),\r\n         ],\r\n"
                }
            ],
            "date": 1729028374776,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:fl_chart/fl_chart.dart';\r\n\r\nclass Cotacao {\r\n  int? id;\r\n  String? ativo;\r\n  DateTime? dtCotacao;\r\n  double? valor;\r\n\r\n  Cotacao({this.id, this.ativo, this.dtCotacao, this.valor});\r\n}\r\n\r\nclass CotacaoChart extends StatelessWidget {\r\n  final List<Cotacao> cotacoes;\r\n\r\n  const CotacaoChart({Key? key, required this.cotacoes}) : super(key: key);\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return LineChart(\r\n      LineChartData(\r\n        titlesData: FlTitlesData(\r\n          bottomTitles: AxisTitles(\r\n            sideTitles: SideTitles(\r\n              showTitles: true,\r\n              reservedSize: 38,\r\n              getTitlesWidget: (value, meta) {\r\n                final index = value.toInt();\r\n                if (index >= 0 && index < cotacoes.length) {\r\n                  return Text(\r\n                    '${cotacoes[index].dtCotacao?.day}/${cotacoes[index].dtCotacao?.month}',\r\n                    style: const TextStyle(fontSize: 10),\r\n                  );\r\n                }\r\n                return const SizedBox.shrink();\r\n              },\r\n            ),\r\n          ),\r\n          leftTitles: AxisTitles(\r\n            sideTitles: SideTitles(showTitles: true),\r\n          ),\r\n        ),\r\n        borderData: FlBorderData(\r\n          show: true,\r\n          border: Border.all(color: Colors.blue, width: 1),\r\n        ),\r\n        lineBarsData: [\r\n          LineChartBarData(\r\n            spots: cotacoes.asMap().entries.map((entry) {\r\n              int index = entry.key;\r\n              Cotacao cotacao = entry.value;\r\n              return FlSpot(index.toDouble(), cotacao.valor ?? 0);\r\n            }).toList(),\r\n            isCurved: true,\r\n            colors: [Colors.blue],\r\n            dotData: FlDotData(show: false),\r\n            belowBarData: BarAreaData(show: false),\r\n          ),\r\n        ],\r\n        gridData: FlGridData(show: false),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}