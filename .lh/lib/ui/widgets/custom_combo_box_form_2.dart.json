{
    "sourceFile": "lib/ui/widgets/custom_combo_box_form_2.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1706726633177,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1706726633177,
            "name": "Commit-0",
            "content": "// Copyright 2019 Aleksander Wo≈∫niak\r\n// SPDX-License-Identifier: Apache-2.0\r\n\r\nimport 'package:flutter/material.dart';\r\nimport 'package:task_manager_flutter/data/utils/ensure_visible_when_focused.dart';\r\nimport 'package:task_manager_flutter/data/constants/custom_colors.dart';\r\n\r\nimport 'package:dropdown_button2/dropdown_button2.dart';\r\n\r\nclass CustomComboBoxFormList extends StatefulWidget {\r\n  const CustomComboBoxFormList({super.key});\r\n\r\n  @override\r\n  State<CustomComboBoxFormList> createState() => _CustomComboBoxFormList();\r\n}\r\n\r\nclass _CustomComboBoxFormList extends State<CustomComboBoxFormList> {\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    // List of items in our dropdown menu\r\n    var items = [\r\n      'Masculino',\r\n      'Feminino',\r\n    ];\r\n    List<String> selectedItems = [];\r\n\r\n    return Padding(\r\n      padding: const EdgeInsets.symmetric(vertical: 3),\r\n      child: Center(\r\n        child: Column(\r\n          mainAxisAlignment: MainAxisAlignment.center,\r\n          children: [\r\n            DropdownButtonHideUnderline(\r\n              child: DropdownButton2<String>(\r\n                isExpanded: true,\r\n                hint: Text(\r\n                  'Escolha o sexo atendimento',\r\n                  style: TextStyle(\r\n                    fontSize: 14,\r\n                    color: Theme.of(context).hintColor,\r\n                  ),\r\n                ),\r\n                items: items.map((item) {\r\n                  return DropdownMenuItem(\r\n                    value: item,\r\n                    //disable default onTap to avoid closing menu when selecting an item\r\n                    enabled: false,\r\n                    child: StatefulBuilder(\r\n                      builder: (context, menuSetState) {\r\n                        final isSelected = selectedItems.contains(item);\r\n                        return InkWell(\r\n                          onTap: () {\r\n                            isSelected\r\n                                ? selectedItems.remove(item)\r\n                                : selectedItems.add(item);\r\n                            //This rebuilds the StatefulWidget to update the button's text\r\n                            setState(() {});\r\n                            //This rebuilds the dropdownMenu Widget to update the check mark\r\n                            menuSetState(() {});\r\n                          },\r\n                          child: Container(\r\n                            height: double.infinity,\r\n                            padding:\r\n                                const EdgeInsets.symmetric(horizontal: 16.0),\r\n                            child: Row(\r\n                              children: [\r\n                                if (isSelected)\r\n                                  const Icon(Icons.check_box_outlined)\r\n                                else\r\n                                  const Icon(Icons.check_box_outline_blank),\r\n                                const SizedBox(width: 16),\r\n                                Expanded(\r\n                                  child: Text(\r\n                                    item,\r\n                                    style: const TextStyle(\r\n                                      fontSize: 14,\r\n                                    ),\r\n                                  ),\r\n                                ),\r\n                              ],\r\n                            ),\r\n                          ),\r\n                        );\r\n                      },\r\n                    ),\r\n                  );\r\n                }).toList(),\r\n                //Use last selected item as the current value so if we've limited menu height, it scroll to last item.\r\n                value: selectedItems.isEmpty ? null : selectedItems.last,\r\n                onChanged: (value) {},\r\n                selectedItemBuilder: (context) {\r\n                  return items.map(\r\n                    (item) {\r\n                      return Container(\r\n                        alignment: AlignmentDirectional.center,\r\n                        child: Text(\r\n                          selectedItems.join(', '),\r\n                          style: const TextStyle(\r\n                            fontSize: 14,\r\n                            overflow: TextOverflow.ellipsis,\r\n                          ),\r\n                          maxLines: 1,\r\n                        ),\r\n                      );\r\n                    },\r\n                  ).toList();\r\n                },\r\n                buttonStyleData: ButtonStyleData(\r\n                  height: 50,\r\n                  width: 160,\r\n                  padding: const EdgeInsets.only(left: 14, right: 14),\r\n                  decoration: BoxDecoration(\r\n                    borderRadius: BorderRadius.circular(14),\r\n                    border: Border.all(\r\n                      color: Colors.black26,\r\n                    ),\r\n                    color: Colors.redAccent,\r\n                  ),\r\n                  elevation: 2,\r\n                ),\r\n                iconStyleData: const IconStyleData(\r\n                  icon: Icon(\r\n                    Icons.arrow_forward_ios_outlined,\r\n                  ),\r\n                  iconSize: 14,\r\n                  iconEnabledColor: Colors.yellow,\r\n                  iconDisabledColor: Colors.grey,\r\n                ),\r\n                dropdownStyleData: DropdownStyleData(\r\n                  maxHeight: 200,\r\n                  width: 200,\r\n                  decoration: BoxDecoration(\r\n                    borderRadius: BorderRadius.circular(14),\r\n                    color: Colors.redAccent,\r\n                  ),\r\n                  offset: const Offset(-20, 0),\r\n                  scrollbarTheme: ScrollbarThemeData(\r\n                    radius: const Radius.circular(40),\r\n                    thickness: MaterialStateProperty.all(6),\r\n                    thumbVisibility: MaterialStateProperty.all(true),\r\n                  ),\r\n                ),\r\n                menuItemStyleData: const MenuItemStyleData(\r\n                  height: 40,\r\n                  padding: EdgeInsets.only(left: 14, right: 14),\r\n                ),\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}