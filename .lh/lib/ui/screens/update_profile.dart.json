{
    "sourceFile": "lib/ui/screens/update_profile.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1728332541441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728332551791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,8 @@\n import 'dart:io';\r\n import '../../data/models/login_model.dart';\r\n import 'package:task_manager_flutter/data/constants/custom_colors.dart';\r\n \r\n-\r\n class UpdateProfileScreen extends StatefulWidget {\r\n   const UpdateProfileScreen({super.key});\r\n \r\n   @override\r\n"
                },
                {
                    "date": 1728332577685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,11 +144,11 @@\n                   },\r\n                   child: Row(children: [\r\n                     Container(\r\n                       padding: const EdgeInsets.all(16),\r\n-                      decoration: const BoxDecoration(\r\n-                        color: Colors.grey,\r\n-                        borderRadius: BorderRadius.only(\r\n+                      decoration:  BoxDecoration(\r\n+                        color: CustomColors().getAppBotton(),\r\n+                        borderRadius: const BorderRadius.only(\r\n                           topLeft: Radius.circular(8),\r\n                           bottomLeft: Radius.circular(8),\r\n                         ),\r\n                       ),\r\n"
                },
                {
                    "date": 1728332612948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n import 'dart:io';\r\n import '../../data/models/login_model.dart';\r\n import 'package:task_manager_flutter/data/constants/custom_colors.dart';\r\n \r\n+\r\n class UpdateProfileScreen extends StatefulWidget {\r\n   const UpdateProfileScreen({super.key});\r\n \r\n   @override\r\n@@ -116,9 +117,9 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n-      backgroundColor: CustomColors().getAppBotton(),\r\n+      backgroundColor: CustomColors().get,\r\n       appBar: userBanner(context),\r\n       body: ScreenBackground(\r\n           child: SingleChildScrollView(\r\n         child: Padding(\r\n@@ -144,11 +145,11 @@\n                   },\r\n                   child: Row(children: [\r\n                     Container(\r\n                       padding: const EdgeInsets.all(16),\r\n-                      decoration: BoxDecoration(\r\n-                        color: CustomColors().getAppBotton(),\r\n-                        borderRadius: const BorderRadius.only(\r\n+                      decoration: const BoxDecoration(\r\n+                        color: Colors.grey,\r\n+                        borderRadius: BorderRadius.only(\r\n                           topLeft: Radius.circular(8),\r\n                           bottomLeft: Radius.circular(8),\r\n                         ),\r\n                       ),\r\n"
                },
                {
                    "date": 1728332621492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,8 @@\n import 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\n import 'dart:async';\r\n import 'dart:io';\r\n import '../../data/models/login_model.dart';\r\n-import 'package:task_manager_flutter/data/constants/custom_colors.dart';\r\n \r\n class UpdateProfileScreen extends StatefulWidget {\r\n   const UpdateProfileScreen({super.key});\r\n \r\n@@ -116,9 +115,9 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n-      backgroundColor: CustomColors().get,\r\n+      backgroundColor: Colors.white54,\r\n       appBar: userBanner(context),\r\n       body: ScreenBackground(\r\n           child: SingleChildScrollView(\r\n         child: Padding(\r\n"
                }
            ],
            "date": 1728332541441,
            "name": "Commit-0",
            "content": "import 'package:flutter/cupertino.dart';\r\nimport 'package:flutter/material.dart';\r\nimport 'package:image_picker/image_picker.dart';\r\nimport 'package:task_manager_flutter/data/models/auth_utility.dart';\r\nimport 'package:task_manager_flutter/data/models/network_response.dart';\r\nimport 'package:task_manager_flutter/data/services/network_caller.dart';\r\nimport 'package:task_manager_flutter/data/utils/api_links.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/custom_button.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/custom_password_text_field.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/custom_text_form_field.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/screen_background.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\nimport 'dart:async';\r\nimport 'dart:io';\r\nimport '../../data/models/login_model.dart';\r\nimport 'package:task_manager_flutter/data/constants/custom_colors.dart';\r\n\r\n\r\nclass UpdateProfileScreen extends StatefulWidget {\r\n  const UpdateProfileScreen({super.key});\r\n\r\n  @override\r\n  State<UpdateProfileScreen> createState() => _UpdateProfileScreenState();\r\n}\r\n\r\nclass _UpdateProfileScreenState extends State<UpdateProfileScreen> {\r\n  Data userInfo = AuthUtility.userInfo.data!;\r\n  final TextEditingController _emailController = TextEditingController();\r\n\r\n  final TextEditingController _firstNameController = TextEditingController();\r\n\r\n  final TextEditingController _lastNameController = TextEditingController();\r\n\r\n  final TextEditingController _phoneNumberController = TextEditingController();\r\n\r\n  final TextEditingController _passwordController = TextEditingController();\r\n\r\n  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();\r\n  bool _signUpInProgress = false;\r\n\r\n  XFile? pickImage;\r\n  String? base64Image;\r\n  File? image;\r\n\r\n  //late List<XFile> = [];\r\n  @override\r\n  void initState() {\r\n    super.initState();\r\n    _emailController.text =\r\n        AuthUtility.userInfo.data?.codDadosPessoal?.email ?? \"\";\r\n    _firstNameController.text =\r\n        AuthUtility.userInfo.data?.codDadosPessoal?.nome ?? \"\";\r\n    _lastNameController.text =\r\n        AuthUtility.userInfo.data?.codDadosPessoal?.cpf ?? \"\";\r\n    _phoneNumberController.text = AuthUtility.userInfo.data?.mobile ?? \"\";\r\n  }\r\n\r\n  Future<XFile?> getLostData() async {\r\n    final ImagePicker picker = ImagePicker();\r\n    final LostDataResponse response = await picker.retrieveLostData();\r\n    if (response.isEmpty) {\r\n      return null;\r\n    }\r\n    final XFile? files = response.file;\r\n    if (files != null) {\r\n      final XFile? photo = pickImage;\r\n      return files;\r\n    } else {\r\n      print(response.exception);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  Future<void> updateProfile() async {\r\n    _signUpInProgress = true;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    Map<String, dynamic> requestBody = {\r\n      \"email\": _emailController.text.trim(),\r\n      \"firstName\": _firstNameController.text.trim(),\r\n      \"lastName\": _lastNameController.text.trim(),\r\n      \"phoneNumber\": _phoneNumberController.text.trim(),\r\n      \"photos\": \"\"\r\n    };\r\n    if (_passwordController.text.isNotEmpty) {\r\n      requestBody[\"password\"] = _passwordController.text;\r\n    }\r\n    final NetworkResponse response =\r\n        await NetworkCaller().postRequest(ApiLinks.profileUpdate, requestBody);\r\n    _signUpInProgress = false;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    if (response.isSuccess) {\r\n      userInfo.firstName = _firstNameController.text.trim();\r\n      userInfo.lastName = _lastNameController.text.trim();\r\n      userInfo.mobile = _phoneNumberController.text.trim();\r\n      _passwordController.clear();\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Profile update Successful\"),\r\n          ),\r\n        );\r\n      }\r\n    } else {\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Profile update Failed\"),\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      backgroundColor: CustomColors().getAppBotton(),\r\n      appBar: userBanner(context),\r\n      body: ScreenBackground(\r\n          child: SingleChildScrollView(\r\n        child: Padding(\r\n          padding: const EdgeInsets.all(16.0),\r\n          child: Form(\r\n            key: _formKey,\r\n            child: Column(\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                const SizedBox(\r\n                  height: 50,\r\n                ),\r\n                const Text(\r\n                  \"Update Profile\",\r\n                  style: TextStyle(fontSize: 28, fontWeight: FontWeight.bold),\r\n                ),\r\n                const SizedBox(\r\n                  height: 16,\r\n                ),\r\n                InkWell(\r\n                  onTap: () {\r\n                    imagePicked();\r\n                  },\r\n                  child: Row(children: [\r\n                    Container(\r\n                      padding: const EdgeInsets.all(16),\r\n                      decoration: const BoxDecoration(\r\n                        color: Colors.grey,\r\n                        borderRadius: BorderRadius.only(\r\n                          topLeft: Radius.circular(8),\r\n                          bottomLeft: Radius.circular(8),\r\n                        ),\r\n                      ),\r\n                      child: const Text(\"Photos\"),\r\n                    ),\r\n                    Expanded(\r\n                      child: Container(\r\n                        padding: const EdgeInsets.all(16),\r\n                        decoration: const BoxDecoration(\r\n                          color: Color(0xFF3F1D9D),\r\n                          borderRadius: BorderRadius.only(\r\n                            topRight: Radius.circular(8),\r\n                            bottomRight: Radius.circular(8),\r\n                          ),\r\n                        ),\r\n                        child: Text(\r\n                          pickImage?.name ?? \"\",\r\n                          maxLines: 1,\r\n                          style:\r\n                              const TextStyle(overflow: TextOverflow.ellipsis),\r\n                        ),\r\n                      ),\r\n                    ),\r\n                  ]),\r\n                ),\r\n                const SizedBox(\r\n                  height: 16,\r\n                ),\r\n                CustomTextFormField(\r\n                  hintText: \"Email\",\r\n                  readOnly: true,\r\n                  controller: _emailController,\r\n                  textInputType: TextInputType.text,\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return \"Please enter email\";\r\n                    }\r\n                    return null;\r\n                  },\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  hintText: \"First Name\",\r\n                  controller: _firstNameController,\r\n                  textInputType: TextInputType.text,\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return \"Please enter first name\";\r\n                    }\r\n                    return null;\r\n                  },\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  hintText: \"Last Name\",\r\n                  controller: _lastNameController,\r\n                  textInputType: TextInputType.text,\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return \"Please enter last name\";\r\n                    }\r\n                    return null;\r\n                  },\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  hintText: \"Phone Number\",\r\n                  controller: _phoneNumberController,\r\n                  textInputType: TextInputType.phone,\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true && value?.length != 11) {\r\n                      return \"Please enter phone number\";\r\n                    }\r\n                    return null;\r\n                  },\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomPasswordTextFormField(\r\n                  obscureText: true,\r\n                  hintText: \"Password\",\r\n                  controller: _passwordController,\r\n                  textInputType: TextInputType.text,\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return \"Please enter password\";\r\n                    }\r\n                    return null;\r\n                  },\r\n                ),\r\n                const SizedBox(\r\n                  height: 16,\r\n                ),\r\n                Visibility(\r\n                  visible: _signUpInProgress == false,\r\n                  replacement:\r\n                      const Center(child: CupertinoActivityIndicator()),\r\n                  child: CustomButton(\r\n                      onPresse: () {\r\n                        updateProfile();\r\n                      },\r\n                      labels: \"teste\"),\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      )),\r\n    );\r\n  }\r\n\r\n  void imagePicked() async {\r\n    showDialog(\r\n        context: context,\r\n        builder: (context) {\r\n          return AlertDialog(\r\n            title: const Text('Pick Image From:'),\r\n            content: Column(\r\n              mainAxisSize: MainAxisSize.min,\r\n              children: [\r\n                ListTile(\r\n                  onTap: () async {\r\n                    pickImage = await ImagePicker()\r\n                        .pickImage(source: ImageSource.camera);\r\n                    if (pickImage != null) {\r\n                      setState(() {});\r\n                      if (mounted) {\r\n                        Navigator.pop(context);\r\n                      }\r\n                    } else {}\r\n                  },\r\n                  leading: const Icon(Icons.camera),\r\n                  title: const Text('Camera'),\r\n                ),\r\n                ListTile(\r\n                  leading: const Icon(Icons.image),\r\n                  onTap: () async {\r\n                    pickImage = await ImagePicker()\r\n                        .pickImage(source: ImageSource.gallery);\r\n                    if (pickImage != null) {\r\n                      setState(() {});\r\n                      if (mounted) {\r\n                        Navigator.pop(context);\r\n                      }\r\n                    } else {}\r\n                  },\r\n                  title: const Text('Gallery'),\r\n                )\r\n              ],\r\n            ),\r\n          );\r\n        });\r\n  }\r\n}\r\n"
        }
    ]
}