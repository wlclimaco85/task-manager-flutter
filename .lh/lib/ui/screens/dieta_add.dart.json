{
    "sourceFile": "lib/ui/screens/dieta_add.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1709066632012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1709244810713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,16 +42,13 @@\n     _focusNode.dispose();\r\n     super.dispose();\r\n   }\r\n \r\n-  final TextEditingController _medicamentoController = TextEditingController();\r\n-  final TextEditingController _laboratorioController = TextEditingController();\r\n-  final TextEditingController _medicoReceitouController =\r\n+  final TextEditingController _nutricionistaController = TextEditingController();\r\n+  final TextEditingController _objetivoController = TextEditingController();\r\n+  final TextEditingController _descricaoController =\r\n       TextEditingController();\r\n-  final TextEditingController _dosagemController = TextEditingController();\r\n-  final TextEditingController _descricaoController = TextEditingController();\r\n-  final TextEditingController _observacaoController = TextEditingController();\r\n-  final TextEditingController _valorController = TextEditingController();\r\n+  final TextEditingController _dtConsultaController = TextEditingController();\r\n   final TextEditingController _dtInicioController = TextEditingController();\r\n   final TextEditingController _dtFinalController = TextEditingController();\r\n \r\n   Future<List<int>> getLostData() async {\r\n"
                },
                {
                    "date": 1709244905671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,15 +96,12 @@\n     af[\"foto\"] = \"data:image/png;base64,$base64Imagess\";\r\n \r\n     Map<String, dynamic> requestBody = {\r\n       \"idaluno\": af,\r\n-      \"medicamento\": _medicamentoController.text.trim(),\r\n-      \"laboratorio\": _laboratorioController.text.trim(),\r\n-      \"medicoReceitou\": _medicoReceitouController.text.trim(),\r\n-      \"dosagem\": _dosagemController.text.trim(),\r\n+      \"nutricionista\": _nutricionistaController.text.trim(),\r\n+      \"objetivo\": _objetivoController.text.trim(),\r\n       \"descricao\": _descricaoController.text.trim(),\r\n-      \"observacao\": _observacaoController.text.trim(),\r\n-      \"valor\": _valorController.text.trim(),\r\n+      \"dtConsulta\": _dtConsultaController.text.trim(),\r\n       \"dtInicio\": _dtInicioController.text.trim(),\r\n       \"dtFinal\": _dtFinalController.text.trim(),\r\n       \"fotos\": [fotos],\r\n     };\r\n"
                },
                {
                    "date": 1709244968610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -201,18 +201,18 @@\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.text,\r\n-                    keyField: \"Medicamanto\",\r\n-                    controller: _medicamentoController,\r\n-                    onPressed: (vale) => _onUpdate(0, \"Nome\", vale),\r\n+                    keyField: \"Nutricionista\",\r\n+                    controller: _nutricionistaController,\r\n+                    onPressed: (vale) => _onUpdate(0, \"Nutricionista\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.text,\r\n-                    keyField: \"Nome Laboratorio\",\r\n-                    controller: _laboratorioController,\r\n+                    keyField: \"Objetivo\",\r\n+                    controller: _objetivoController,\r\n                     onPressed: (vale) => _onUpdate(0, \"laboratorio\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n"
                },
                {
                    "date": 1709244985992,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -211,15 +211,15 @@\n                     focusNode: _focusNode,\r\n                     type: TextInputType.text,\r\n                     keyField: \"Objetivo\",\r\n                     controller: _objetivoController,\r\n-                    onPressed: (vale) => _onUpdate(0, \"laboratorio\", vale),\r\n+                    onPressed: (vale) => _onUpdate(0, \"Objetivo\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.text,\r\n-                    keyField: \"Nome Medico que receitou\",\r\n+                    keyField: \"Descrição\",\r\n                     controller: _medicoReceitouController,\r\n                     onPressed: (vale) => _onUpdate(0, \"laboratorio\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n"
                },
                {
                    "date": 1709244992888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -218,9 +218,9 @@\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.text,\r\n                     keyField: \"Descrição\",\r\n-                    controller: _medicoReceitouController,\r\n+                    controller: _descricaoController,\r\n                     onPressed: (vale) => _onUpdate(0, \"laboratorio\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n"
                },
                {
                    "date": 1709244999280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -219,9 +219,9 @@\n                     focusNode: _focusNode,\r\n                     type: TextInputType.text,\r\n                     keyField: \"Descrição\",\r\n                     controller: _descricaoController,\r\n-                    onPressed: (vale) => _onUpdate(0, \"laboratorio\", vale),\r\n+                    onPressed: (vale) => _onUpdate(0, \"descricao\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n"
                },
                {
                    "date": 1709245046778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -232,32 +232,8 @@\n                   ),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n-                    type: TextInputType.text,\r\n-                    keyField: \"Dosagem\",\r\n-                    controller: _dosagemController,\r\n-                    onPressed: (vale) => _onUpdate(0, \"resultado\", vale),\r\n-                  ),\r\n-                  CustomInputForm(\r\n-                    validator: EmailValidator.validate,\r\n-                    focusNode: _focusNode,\r\n-                    type: TextInputType.text,\r\n-                    keyField: \"Observações\",\r\n-                    controller: _observacaoController,\r\n-                    onPressed: (vale) => _onUpdate(0, \"dtExame\", vale),\r\n-                  ),\r\n-                  CustomInputForm(\r\n-                    validator: EmailValidator.validate,\r\n-                    focusNode: _focusNode,\r\n-                    type: TextInputType.number,\r\n-                    keyField: \"Valor\",\r\n-                    controller: _valorController,\r\n-                    onPressed: (vale) => _onUpdate(0, \"dtExame\", vale),\r\n-                  ),\r\n-                  CustomInputForm(\r\n-                    validator: EmailValidator.validate,\r\n-                    focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n                     keyField: \"Data de quando começou a tomar\",\r\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n"
                },
                {
                    "date": 1709245098506,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,9 +233,9 @@\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n-                    keyField: \"Data de quando começou a tomar\",\r\n+                    keyField: \"Data de quando começou a Diete\",\r\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n"
                },
                {
                    "date": 1709245116218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,18 +233,18 @@\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n-                    keyField: \"Data de quando começou a Diete\",\r\n+                    keyField: \"Data de quando começou a dieta\",\r\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n-                    keyField: \"Data de quando terminou de tomar\",\r\n+                    keyField: \"Data de quando terminou a dieta\",\r\n                     controller: _dtFinalController,\r\n                     onPressed: (vale) => _onUpdate(0, \"medico\", vale),\r\n                   ),\r\n                   InkWell(\r\n"
                },
                {
                    "date": 1709245134650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -233,8 +233,17 @@\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n+                    keyField: \"Data consulta\",\r\n+                    controller: _dtInicioController,\r\n+                    onPressed: (vale) =>\r\n+                        _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n+                  ),\r\n+                  CustomInputForm(\r\n+                    validator: EmailValidator.validate,\r\n+                    focusNode: _focusNode,\r\n+                    type: TextInputType.datetime,\r\n                     keyField: \"Data de quando começou a dieta\",\r\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n"
                },
                {
                    "date": 1709245160761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -234,9 +234,9 @@\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n                     keyField: \"Data consulta\",\r\n-                    controller: _dtInicioController,\r\n+                    controller: _dtConsultaController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n                   CustomInputForm(\r\n"
                },
                {
                    "date": 1709245477850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import 'package:task_manager_flutter/data/utils/personal_validation.dart';\r\n import '../../data/models/login_model.dart';\r\n import 'package:task_manager_flutter/data/models/auth_utility.dart';\r\n import 'dart:io';\r\n-import 'package:task_manager_flutter/ui/widgets/custom_insert_list_foto.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/data_picker_core.dart';\r\n \r\n class DietaModalAdd extends StatefulWidget {\r\n   const DietaModalAdd({super.key});\r\n   @override\r\n@@ -247,8 +247,9 @@\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n+                  DatePickerExample(),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n"
                },
                {
                    "date": 1709247121948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import 'package:task_manager_flutter/data/utils/personal_validation.dart';\r\n import '../../data/models/login_model.dart';\r\n import 'package:task_manager_flutter/data/models/auth_utility.dart';\r\n import 'dart:io';\r\n-import 'package:task_manager_flutter/ui/widgets/data_picker_core.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/data_picker_core_date.dart';\r\n \r\n class DietaModalAdd extends StatefulWidget {\r\n   const DietaModalAdd({super.key});\r\n   @override\r\n@@ -247,9 +247,9 @@\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n-                  DatePickerExample(),\r\n+                  DatePickerExample(\"Nome\"),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n"
                },
                {
                    "date": 1709247135819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,9 +247,9 @@\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n-                  DatePickerExample(\"Nome\"),\r\n+                  DatePickerExample(label : \"Nome\"),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n"
                },
                {
                    "date": 1709297402187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,9 +247,11 @@\n                     controller: _dtInicioController,\r\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n-                  DatePickerExample(label: \"Nome\"),\r\n+                  DatePickerExample(label: \"Data Consulta\"),\r\n+                  DatePickerExample(label: \"Data de quando começou a dieta\"),\r\n+                  DatePickerExample(label: \"Data de quando terminou a dieta\"),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n"
                },
                {
                    "date": 1709297420639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,10 +248,10 @@\n                     onPressed: (vale) =>\r\n                         _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                   ),\r\n                   DatePickerExample(label: \"Data Consulta\"),\r\n-                  DatePickerExample(label: \"Data de quando começou a dieta\"),\r\n-                  DatePickerExample(label: \"Data de quando terminou a dieta\"),\r\n+                  DatePickerExample(label: \"Data Ini dieta\"),\r\n+                  DatePickerExample(label: \"Data Fim dieta\"),\r\n                   CustomInputForm(\r\n                     validator: EmailValidator.validate,\r\n                     focusNode: _focusNode,\r\n                     type: TextInputType.datetime,\r\n"
                }
            ],
            "date": 1709066632012,
            "name": "Commit-0",
            "content": "import 'dart:convert';\r\nimport 'dart:io' as io;\r\nimport 'package:flutter/material.dart';\r\nimport 'package:image_picker/image_picker.dart';\r\nimport 'package:task_manager_flutter/data/utils/api_links.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\nimport 'package:task_manager_flutter/ui/screens/update_profile.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/custom_input_form.dart';\r\nimport 'package:task_manager_flutter/data/constants/custom_colors.dart';\r\nimport 'package:task_manager_flutter/data/models/network_response.dart';\r\nimport 'package:task_manager_flutter/data/services/network_caller.dart';\r\nimport 'package:task_manager_flutter/data/utils/personal_validation.dart';\r\nimport '../../data/models/login_model.dart';\r\nimport 'package:task_manager_flutter/data/models/auth_utility.dart';\r\nimport 'dart:io';\r\nimport 'package:task_manager_flutter/ui/widgets/custom_insert_list_foto.dart';\r\n\r\nclass DietaModalAdd extends StatefulWidget {\r\n  const DietaModalAdd({super.key});\r\n  @override\r\n  State<DietaModalAdd> createState() => _DietaModalAddState();\r\n}\r\n\r\nclass _DietaModalAddState extends State<DietaModalAdd> {\r\n  final TextEditingController _nameController = TextEditingController();\r\n\r\n  late GlobalKey<FormState> _formKey;\r\n  late FocusNode _focusNode;\r\n  XFile? pickImage;\r\n  String? base64Image;\r\n  bool _signUpInProgress = false;\r\n\r\n  @override\r\n  void initState() {\r\n    _formKey = GlobalKey<FormState>();\r\n    _focusNode = FocusNode();\r\n    super.initState();\r\n  }\r\n\r\n  @override\r\n  void dispose() {\r\n    _focusNode.dispose();\r\n    super.dispose();\r\n  }\r\n\r\n  final TextEditingController _medicamentoController = TextEditingController();\r\n  final TextEditingController _laboratorioController = TextEditingController();\r\n  final TextEditingController _medicoReceitouController =\r\n      TextEditingController();\r\n  final TextEditingController _dosagemController = TextEditingController();\r\n  final TextEditingController _descricaoController = TextEditingController();\r\n  final TextEditingController _observacaoController = TextEditingController();\r\n  final TextEditingController _valorController = TextEditingController();\r\n  final TextEditingController _dtInicioController = TextEditingController();\r\n  final TextEditingController _dtFinalController = TextEditingController();\r\n\r\n  Future<List<int>> getLostData() async {\r\n    final ImagePicker picker = ImagePicker();\r\n    final LostDataResponse response = await picker.retrieveLostData();\r\n    final XFile? files = response.file;\r\n    final XFile? photo;\r\n    if (files != null) {\r\n      photo = pickImage;\r\n      return files.readAsBytes();\r\n    } else {\r\n      const asciiDecoder = AsciiDecoder();\r\n      final asciiValues = [104, 101, 108, 108, 111];\r\n      return asciiValues;\r\n      print(response.exception);\r\n    }\r\n  }\r\n\r\n  Future<String?> uploadPdf(String fileName, File file) async {\r\n    return null;\r\n  }\r\n\r\n  Future<void> updateProfile() async {\r\n    _signUpInProgress = true;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    String base64Imagess = \"\";\r\n    if (pickImage != null) {\r\n      // var bytes = File(pickImage!.path).readAsBytesSync();\r\n      // String base64Image = base64Encode(bytes);\r\n      print('upload proccess started');\r\n      final bytess = io.File(pickImage!.path).readAsBytesSync();\r\n      //  List<int> imageBytes = pickImage?.readAsBytesSync();\r\n      // print(imageBytes);\r\n      //String base64Images = base64Encode(imageBytes);\r\n      base64Imagess = base64Encode(bytess);\r\n    }\r\n    Data userInfo = AuthUtility.userInfo.data!;\r\n\r\n    Map<String, dynamic> af = {};\r\n    af[\"id\"] = userInfo.id;\r\n\r\n    Map<String, dynamic> fotos = {};\r\n    af[\"foto\"] = \"data:image/png;base64,$base64Imagess\";\r\n\r\n    Map<String, dynamic> requestBody = {\r\n      \"idaluno\": af,\r\n      \"medicamento\": _medicamentoController.text.trim(),\r\n      \"laboratorio\": _laboratorioController.text.trim(),\r\n      \"medicoReceitou\": _medicoReceitouController.text.trim(),\r\n      \"dosagem\": _dosagemController.text.trim(),\r\n      \"descricao\": _descricaoController.text.trim(),\r\n      \"observacao\": _observacaoController.text.trim(),\r\n      \"valor\": _valorController.text.trim(),\r\n      \"dtInicio\": _dtInicioController.text.trim(),\r\n      \"dtFinal\": _dtFinalController.text.trim(),\r\n      \"fotos\": [fotos],\r\n    };\r\n\r\n    final NetworkResponse response = await NetworkCaller()\r\n        .postRequest(ApiLinks.insertMedicamento, requestBody);\r\n    _signUpInProgress = false;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    if (response.isSuccess) {\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Exame inserido com Success\"),\r\n          ),\r\n        );\r\n      }\r\n    } else {\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Erro ao inserir Exame\"),\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  final List<Map<String, dynamic>> _dataArray = []; //add this\r\n  String? _data = \"\"; //add this\r\n  void _onUpdate(int key, String value, chave) {\r\n    void addData() {\r\n      Map<String, dynamic> json = {\r\n        'id': key,\r\n        chave: value,\r\n        chave: value,\r\n        chave: value,\r\n        chave: value\r\n      };\r\n      _dataArray.add(json);\r\n      setState(() {\r\n        _data = _dataArray.toString();\r\n      });\r\n    }\r\n\r\n    if (_dataArray.isEmpty) {\r\n      addData();\r\n    } else {\r\n      _dataArray.asMap().entries.map((entry) {\r\n        if (entry.key == key && entry.value == chave) {\r\n          _dataArray[key][chave] = value;\r\n        }\r\n        print(entry.key);\r\n        print(entry.value);\r\n      });\r\n\r\n      for (var map in _dataArray) {\r\n        if (map[\"id\"] == key) {\r\n          _dataArray[key][chave] = value;\r\n          setState(() {\r\n            _data = _dataArray.toString();\r\n          });\r\n          break;\r\n        }\r\n      }\r\n\r\n      for (var map in _dataArray) {\r\n        if (map[\"id\"] == key) {\r\n          return;\r\n        }\r\n      }\r\n      addData();\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      appBar: userBanner(context, onTapped: () {\r\n        Navigator.push(\r\n            context,\r\n            MaterialPageRoute(\r\n                builder: (context) => const UpdateProfileScreen()));\r\n      }),\r\n      body: Form(\r\n        key: _formKey,\r\n        child: Padding(\r\n          padding: const EdgeInsets.all(18),\r\n          child: Container(\r\n            alignment: Alignment.topCenter,\r\n            color: CustomColors().getAppFundoPage(),\r\n            child: SingleChildScrollView(\r\n              child: Column(\r\n                mainAxisAlignment: MainAxisAlignment.center,\r\n                children: <Widget>[\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.text,\r\n                    keyField: \"Medicamanto\",\r\n                    controller: _medicamentoController,\r\n                    onPressed: (vale) => _onUpdate(0, \"Nome\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.text,\r\n                    keyField: \"Nome Laboratorio\",\r\n                    controller: _laboratorioController,\r\n                    onPressed: (vale) => _onUpdate(0, \"laboratorio\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.text,\r\n                    keyField: \"Nome Medico que receitou\",\r\n                    controller: _medicoReceitouController,\r\n                    onPressed: (vale) => _onUpdate(0, \"laboratorio\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.text,\r\n                    keyField: \"Descrição ('Porque do medicamento')\",\r\n                    controller: _descricaoController,\r\n                    onPressed: (vale) => _onUpdate(0, \"descricao\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.text,\r\n                    keyField: \"Dosagem\",\r\n                    controller: _dosagemController,\r\n                    onPressed: (vale) => _onUpdate(0, \"resultado\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.text,\r\n                    keyField: \"Observações\",\r\n                    controller: _observacaoController,\r\n                    onPressed: (vale) => _onUpdate(0, \"dtExame\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.number,\r\n                    keyField: \"Valor\",\r\n                    controller: _valorController,\r\n                    onPressed: (vale) => _onUpdate(0, \"dtExame\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.datetime,\r\n                    keyField: \"Data de quando começou a tomar\",\r\n                    controller: _dtInicioController,\r\n                    onPressed: (vale) =>\r\n                        _onUpdate(0, \"dtEntregaResulExame\", vale),\r\n                  ),\r\n                  CustomInputForm(\r\n                    validator: EmailValidator.validate,\r\n                    focusNode: _focusNode,\r\n                    type: TextInputType.datetime,\r\n                    keyField: \"Data de quando terminou de tomar\",\r\n                    controller: _dtFinalController,\r\n                    onPressed: (vale) => _onUpdate(0, \"medico\", vale),\r\n                  ),\r\n                  InkWell(\r\n                    onTap: () {\r\n                      imagePicked();\r\n                    },\r\n                    child: Row(children: [\r\n                      Container(\r\n                        padding: const EdgeInsets.all(18),\r\n                        decoration: const BoxDecoration(\r\n                          color: Colors.grey,\r\n                          borderRadius: BorderRadius.only(\r\n                            topLeft: Radius.circular(8),\r\n                            bottomLeft: Radius.circular(8),\r\n                          ),\r\n                        ),\r\n                        child: const Text(\"Foto\"),\r\n                      ),\r\n                      Expanded(\r\n                        child: Container(\r\n                          padding: const EdgeInsets.all(18),\r\n                          decoration: BoxDecoration(\r\n                            color: CustomColors().getAppFundoImput(),\r\n                            borderRadius: const BorderRadius.only(\r\n                              topRight: Radius.circular(8),\r\n                              bottomRight: Radius.circular(8),\r\n                            ),\r\n                          ),\r\n                          child: Text(\r\n                            pickImage?.name ?? \"\",\r\n                            maxLines: 1,\r\n                            style: const TextStyle(\r\n                                overflow: TextOverflow.ellipsis),\r\n                          ),\r\n                        ),\r\n                      ),\r\n                    ]),\r\n                  ),\r\n                ],\r\n              ),\r\n            ),\r\n          ),\r\n        ),\r\n      ),\r\n      floatingActionButton: FloatingActionButton(\r\n        onPressed: () {\r\n          final form = _formKey.currentState!;\r\n          form.validate();\r\n          _focusNode.requestFocus();\r\n          updateProfile();\r\n        },\r\n        child: const Icon(Icons.check),\r\n      ),\r\n    );\r\n  }\r\n\r\n  void imagePicked() async {\r\n    showDialog(\r\n        context: context,\r\n        builder: (context) {\r\n          return AlertDialog(\r\n            title: const Text('Pick Image From:'),\r\n            content: Column(\r\n              mainAxisSize: MainAxisSize.min,\r\n              children: [\r\n                ListTile(\r\n                  onTap: () async {\r\n                    pickImage = await ImagePicker()\r\n                        .pickImage(source: ImageSource.camera);\r\n                    if (pickImage != null) {\r\n                      setState(() {});\r\n                      if (mounted) {\r\n                        Navigator.pop(context);\r\n                      }\r\n                    } else {}\r\n                  },\r\n                  leading: const Icon(Icons.camera),\r\n                  title: const Text('Camera'),\r\n                ),\r\n                ListTile(\r\n                  leading: const Icon(Icons.image),\r\n                  onTap: () async {\r\n                    pickImage = await ImagePicker()\r\n                        .pickImage(source: ImageSource.gallery);\r\n                    if (pickImage != null) {\r\n                      setState(() {});\r\n                      if (mounted) {\r\n                        Navigator.pop(context);\r\n                      }\r\n                    } else {}\r\n                  },\r\n                  title: const Text('Gallery'),\r\n                )\r\n              ],\r\n            ),\r\n          );\r\n        });\r\n  }\r\n}\r\n"
        }
    ]
}