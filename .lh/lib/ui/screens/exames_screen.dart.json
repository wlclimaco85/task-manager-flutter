{
    "sourceFile": "lib/ui/screens/exames_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1708725580220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708725627890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,24 +8,24 @@\n import 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\n import 'package:task_manager_flutter/ui/screens/exames_list.dart';\r\n import 'package:task_manager_flutter/ui/screens/exames_add.dart';\r\n \r\n-class SuplementoScreen extends StatefulWidget {\r\n-  const SuplementoScreen({\r\n+class ExameScreen extends StatefulWidget {\r\n+  const ExameScreen({\r\n     Key? key,\r\n   }) : super(key: key);\r\n \r\n   @override\r\n-  State<SuplementoScreen> createState() => _SuplementoScreenState();\r\n+  State<ExameScreen> createState() => _ExameScreenState();\r\n }\r\n \r\n final TextEditingController _taskNameController = TextEditingController();\r\n final TextEditingController _taskDescriptionController =\r\n     TextEditingController();\r\n List<Widget> mywidgets = [];\r\n bool _isLoading = false;\r\n \r\n-class _SuplementoScreenState extends State<SuplementoScreen> {\r\n+class _ExameScreenState extends State<ExameScreen> {\r\n   @override\r\n   void initState() {\r\n     findAllAcademia();\r\n     super.initState();\r\n"
                },
                {
                    "date": 1708728147901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n       \"codAluno\": {\"id\": 1},\r\n     };\r\n \r\n     void onPressedss() => Navigator.push(context,\r\n-        MaterialPageRoute(builder: (context) => const SuplementoModalAdd()));\r\n+        MaterialPageRoute(builder: (context) => const ExamesModalAdd()));\r\n \r\n     final NetworkResponse response = await NetworkCaller()\r\n         .postRequest(ApiLinks.allSuplementoAluno, requestBody);\r\n     _addNewTaskLoading = false;\r\n"
                },
                {
                    "date": 1708728185887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import 'package:task_manager_flutter/ui/widgets/home_list_model.dart';\r\n import 'package:task_manager_flutter/data/models/network_response.dart';\r\n import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n import 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\n+import 'package:task_manager_flutter/ui/screens/exames_add.dart';\r\n \r\n class ExameScreen extends StatefulWidget {\r\n   const ExameScreen({\r\n     Key? key,\r\n"
                },
                {
                    "date": 1708728235742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n               crossAxisAlignment: CrossAxisAlignment.start,\r\n               children: <Widget>[\r\n-                ListItensSuplemento(\r\n+                ListItensExames(\r\n                     nome: element['nome'] ?? \"\",\r\n                     marca: element['marca'] ?? \"\",\r\n                     dataIni: element['dtInicio'] ?? \"\",\r\n                     dataFin: element['dtFinal'] ?? \"\",\r\n"
                }
            ],
            "date": 1708725580220,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:task_manager_flutter/data/utils/api_links.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\nimport 'package:task_manager_flutter/ui/screens/update_profile.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/home_list_model.dart';\r\nimport 'package:task_manager_flutter/data/models/network_response.dart';\r\nimport 'package:task_manager_flutter/data/services/network_caller.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\nimport 'package:task_manager_flutter/ui/screens/exames_list.dart';\r\nimport 'package:task_manager_flutter/ui/screens/exames_add.dart';\r\n\r\nclass SuplementoScreen extends StatefulWidget {\r\n  const SuplementoScreen({\r\n    Key? key,\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  State<SuplementoScreen> createState() => _SuplementoScreenState();\r\n}\r\n\r\nfinal TextEditingController _taskNameController = TextEditingController();\r\nfinal TextEditingController _taskDescriptionController =\r\n    TextEditingController();\r\nList<Widget> mywidgets = [];\r\nbool _isLoading = false;\r\n\r\nclass _SuplementoScreenState extends State<SuplementoScreen> {\r\n  @override\r\n  void initState() {\r\n    findAllAcademia();\r\n    super.initState();\r\n  }\r\n\r\n  bool standardSelected = false;\r\n  bool filledSelected = false;\r\n  bool tonalSelected = false;\r\n  bool outlinedSelected = false;\r\n  int count = 0;\r\n  final List<String> modalidadeList = ['Musculação'];\r\n\r\n  void log(String message) => print(message);\r\n\r\n  bool _addNewTaskLoading = false;\r\n\r\n  List<String> getList(List<dynamic> newMap) {\r\n    late List<String> modList = [];\r\n    for (var v in newMap) {\r\n      Map<String, dynamic> request = v;\r\n      modList.add(v['nome']);\r\n    }\r\n\r\n    return modList;\r\n  }\r\n\r\n  Future<void> findAllAcademia() async {\r\n    _isLoading = true;\r\n    _addNewTaskLoading = true;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    Map<String, dynamic> requestBody = {\r\n      \"codAluno\": {\"id\": 1},\r\n    };\r\n\r\n    void onPressedss() => Navigator.push(context,\r\n        MaterialPageRoute(builder: (context) => const SuplementoModalAdd()));\r\n\r\n    final NetworkResponse response = await NetworkCaller()\r\n        .postRequest(ApiLinks.allSuplementoAluno, requestBody);\r\n    _addNewTaskLoading = false;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    if (response.isSuccess) {\r\n      _taskNameController.clear();\r\n      _taskDescriptionController.clear();\r\n      if (mounted) {\r\n        dynamic data = response.body?['data'];\r\n        List<dynamic> datas = data;\r\n        mywidgets = [];\r\n        mywidgets.add(InputBuscarField(\r\n            hint: \"Buscar Suplemento\",\r\n            obscure: false,\r\n            icon: Icons.person_outline,\r\n            onPresseds: onPressedss));\r\n        for (var element in datas) {\r\n          mywidgets.add(\r\n            Row(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: <Widget>[\r\n                ListItensSuplemento(\r\n                    nome: element['nome'] != null ? element['nome'] : \"\",\r\n                    marca: element['marca'] != null ? element['marca'] : \"\",\r\n                    dataIni:\r\n                        element['dtInicio'] != null ? element['dtInicio'] : \"\",\r\n                    dataFin:\r\n                        element['dtFinal'] != null ? element['dtFinal'] : \"\",\r\n                    dataVal: element['dtVal'] != null ? element['dtVal'] : \"\",\r\n                    porcao:\r\n                        element['dosagem'] != null ? element['dosagem'] : \"\",\r\n                    foto: element['foto'],\r\n                    id: element['id'],\r\n                    valor: element['valor'] != null ? element['valor'] : \"\",\r\n                    sabor: element['sabor'] != null ? element['sabor'] : \"\",\r\n                    tamanho:\r\n                        element['tamanho'] != null ? element['tamanho'] : \"\"),\r\n              ],\r\n            ),\r\n          );\r\n        }\r\n        _isLoading = false;\r\n      }\r\n    } else {\r\n      if (mounted) {\r\n        mywidgets = [];\r\n        mywidgets.add(InputBuscarField(\r\n            hint: \"Buscar Suplemento\",\r\n            obscure: false,\r\n            icon: Icons.person_outline,\r\n            onPresseds: onPressedss));\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Nenhuma suplemento cadastrado!\"),\r\n          ),\r\n        );\r\n        _isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  List<HomeListModel> listModels = [\r\n    HomeListModel(\r\n      title: \"Academia - O Club\",\r\n      assetIcon: \"assets/icons/gym_icon.png\",\r\n    ),\r\n    HomeListModel(\r\n      title: \"Biometa Academia\",\r\n      assetIcon: \"assets/icons/gym_icon.png\",\r\n    ),\r\n    HomeListModel(\r\n      title: \"Academia Titanium Core\",\r\n      assetIcon: \"assets/icons/gym_icon.png\",\r\n    )\r\n  ];\r\n  refreshPage() {\r\n    setState(() {});\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      //  floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n      backgroundColor: const Color(0xFF340A9C),\r\n      appBar: userBanner(\r\n        context,\r\n        onTapped: () {\r\n          Navigator.push(\r\n              context,\r\n              MaterialPageRoute(\r\n                  builder: (context) => const UpdateProfileScreen()));\r\n        },\r\n      ),\r\n      body: SingleChildScrollView(\r\n        child: ConstrainedBox(\r\n          constraints: const BoxConstraints(minHeight: 50),\r\n          child: Column(\r\n            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n            children: mywidgets,\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}