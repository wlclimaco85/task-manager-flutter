{
    "sourceFile": "lib/ui/screens/auth_screens/signup_form_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1707189426187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1707189504293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n import 'package:task_manager_flutter/ui/screens/auth_screens/login_screen.dart';\r\n import 'package:task_manager_flutter/ui/widgets/custom_text_form_field.dart';\r\n import 'package:task_manager_flutter/ui/widgets/screen_background.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/dynamic_form.dart';\r\n \r\n class SignUpFormScreen extends StatefulWidget {\r\n   const SignUpFormScreen({super.key});\r\n \r\n"
                },
                {
                    "date": 1707190136128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,8 @@\n import 'package:flutter/material.dart';\r\n import 'package:task_manager_flutter/data/models/network_response.dart';\r\n import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n-import 'package:task_manager_flutter/ui/screens/auth_screens/login_screen.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/custom_text_form_field.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/screen_background.dart';\r\n import 'package:task_manager_flutter/ui/widgets/dynamic_form.dart';\r\n \r\n class SignUpFormScreen extends StatefulWidget {\r\n   const SignUpFormScreen({super.key});\r\n@@ -73,19 +70,19 @@\n     }\r\n   }\r\n \r\n   @override\r\n-  Widget build(BuildContext context) {\r\n+/*  Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       title: 'Flutter Demo',\r\n       theme: ThemeData(\r\n       \r\n         primarySwatch: Colors.blue,\r\n       ),\r\n       home: const DynamicForm(),\r\n     );\r\n-  }\r\n- /* Widget build(BuildContext context) {\r\n+  }*/\r\n+  Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       body: ScreenBackground(\r\n           child: SingleChildScrollView(\r\n         child: Padding(\r\n@@ -229,6 +226,6 @@\n           ),\r\n         ),\r\n       )),\r\n     );\r\n-  } */\r\n+  } \r\n } \r\n"
                },
                {
                    "date": 1707190220826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,11 @@\n import 'package:task_manager_flutter/data/models/network_response.dart';\r\n import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n import 'package:task_manager_flutter/ui/widgets/dynamic_form.dart';\r\n+import 'package:task_manager_flutter/ui/screens/auth_screens/login_screen.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/custom_text_form_field.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/screen_background.dart';\r\n \r\n class SignUpFormScreen extends StatefulWidget {\r\n   const SignUpFormScreen({super.key});\r\n \r\n"
                },
                {
                    "date": 1707190260276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,142 +91,9 @@\n         child: Padding(\r\n           padding: const EdgeInsets.all(30),\r\n           child: Form(\r\n             key: _formKey,\r\n-            child: Column(\r\n-              mainAxisAlignment: MainAxisAlignment.center,\r\n-              crossAxisAlignment: CrossAxisAlignment.start,\r\n-              children: [\r\n-                const SizedBox(\r\n-                  height: 80,\r\n-                ),\r\n-                Text(\r\n-                  \"Join Us\",\r\n-                  style: Theme.of(context).textTheme.titleLarge,\r\n-                ),\r\n-                const SizedBox(\r\n-                  height: 8,\r\n-                ),\r\n-                CustomTextFormField(\r\n-                  controller: _emailController,\r\n-                  hintText: 'Email',\r\n-                  validator: (value) {\r\n-                    if (value!.isEmpty ||\r\n-                        !RegExp(r'^[\\w-.]+@([\\w-]+\\.)+\\w{2,5}')\r\n-                            .hasMatch(value)) {\r\n-                      return 'Email is required';\r\n-                    }\r\n-                    return null;\r\n-                  },\r\n-                  textInputType: TextInputType.emailAddress,\r\n-                ),\r\n-                const SizedBox(\r\n-                  height: 8,\r\n-                ),\r\n-                CustomTextFormField(\r\n-                  controller: _firstNameController,\r\n-                  hintText: 'First Name',\r\n-                  validator: (value) {\r\n-                    if (value?.isEmpty ?? true) {\r\n-                      return 'Enter your first name';\r\n-                    }\r\n-                    return null;\r\n-                  },\r\n-                  textInputType: TextInputType.text,\r\n-                ),\r\n-                const SizedBox(\r\n-                  height: 8,\r\n-                ),\r\n-                CustomTextFormField(\r\n-                  controller: _lastNameController,\r\n-                  hintText: 'Last Name',\r\n-                  validator: (value) {\r\n-                    if (value?.isEmpty ?? true) {\r\n-                      return 'Enter your last name';\r\n-                    }\r\n-                    return null;\r\n-                  },\r\n-                  textInputType: TextInputType.text,\r\n-                ),\r\n-                const SizedBox(\r\n-                  height: 8,\r\n-                ),\r\n-                CustomTextFormField(\r\n-                  controller: _phoneNumberController,\r\n-                  hintText: 'Phone Number',\r\n-                  validator: (value) {\r\n-                    if (value?.isEmpty ?? true) {\r\n-                      return 'Enter your Valid Phone Number';\r\n-                    }\r\n-                    return null;\r\n-                  },\r\n-                  textInputType: TextInputType.number,\r\n-                ),\r\n-                const SizedBox(\r\n-                  height: 8,\r\n-                ),\r\n-                CustomTextFormField(\r\n-                  controller: _passwordController,\r\n-                  hintText: 'Password',\r\n-                  validator: (value) {\r\n-                    if (value?.isEmpty ?? true) {\r\n-                      return 'Enter your password';\r\n-                    }\r\n-                    return null;\r\n-                  },\r\n-                  textInputType: TextInputType.text,\r\n-                  obscureText: true,\r\n-                ),\r\n-                const SizedBox(height: 12),\r\n-                SizedBox(\r\n-                  width: double.infinity,\r\n-                  child: Visibility(\r\n-                    visible: _signUpInProgress == false,\r\n-                    replacement: const Center(\r\n-                      child: CircularProgressIndicator(),\r\n-                    ),\r\n-                    child: ElevatedButton(\r\n-                      onPressed: () {\r\n-                        if (_formKey.currentState!.validate()) {\r\n-                          userSignUp();\r\n-                        }\r\n-                      },\r\n-                      child: const Icon(\r\n-                        Icons.arrow_circle_right_outlined,\r\n-                        size: 20,\r\n-                      ),\r\n-                    ),\r\n-                  ),\r\n-                ),\r\n-                const SizedBox(\r\n-                  height: 20,\r\n-                ),\r\n-                Row(\r\n-                  mainAxisAlignment: MainAxisAlignment.center,\r\n-                  children: [\r\n-                    const Text(\r\n-                      \"Have an Account?\",\r\n-                      style: TextStyle(fontWeight: FontWeight.w500),\r\n-                    ),\r\n-                    const SizedBox(\r\n-                      width: 2,\r\n-                    ),\r\n-                    TextButton(\r\n-                      onPressed: () {\r\n-                        Navigator.push(\r\n-                            context,\r\n-                            MaterialPageRoute(\r\n-                                builder: (context) => const LoginScreen()));\r\n-                      },\r\n-                      child: const Text(\r\n-                        \"Login\",\r\n-                        style: TextStyle(letterSpacing: .7),\r\n-                      ),\r\n-                    ),\r\n-                  ],\r\n-                ),\r\n-              ],\r\n-            ),\r\n+            child: const DynamicForm()\r\n           ),\r\n         ),\r\n       )),\r\n     );\r\n"
                },
                {
                    "date": 1707190361800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -85,15 +85,149 @@\n     );\r\n   }*/\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n+      \r\n       body: ScreenBackground(\r\n           child: SingleChildScrollView(\r\n         child: Padding(\r\n           padding: const EdgeInsets.all(30),\r\n           child: Form(\r\n             key: _formKey,\r\n-            child: const DynamicForm()\r\n+            child: Column(\r\n+              mainAxisAlignment: MainAxisAlignment.center,\r\n+              crossAxisAlignment: CrossAxisAlignment.start,\r\n+              children: [\r\n+                const SizedBox(\r\n+                  height: 80,\r\n+                ),\r\n+                Text(\r\n+                  \"Join Us\",\r\n+                  style: Theme.of(context).textTheme.titleLarge,\r\n+                ),\r\n+                const SizedBox(\r\n+                  height: 8,\r\n+                ),\r\n+                CustomTextFormField(\r\n+                  controller: _emailController,\r\n+                  hintText: 'Email',\r\n+                  validator: (value) {\r\n+                    if (value!.isEmpty ||\r\n+                        !RegExp(r'^[\\w-.]+@([\\w-]+\\.)+\\w{2,5}')\r\n+                            .hasMatch(value)) {\r\n+                      return 'Email is required';\r\n+                    }\r\n+                    return null;\r\n+                  },\r\n+                  textInputType: TextInputType.emailAddress,\r\n+                ),\r\n+                const SizedBox(\r\n+                  height: 8,\r\n+                ),\r\n+                CustomTextFormField(\r\n+                  controller: _firstNameController,\r\n+                  hintText: 'First Name',\r\n+                  validator: (value) {\r\n+                    if (value?.isEmpty ?? true) {\r\n+                      return 'Enter your first name';\r\n+                    }\r\n+                    return null;\r\n+                  },\r\n+                  textInputType: TextInputType.text,\r\n+                ),\r\n+                const SizedBox(\r\n+                  height: 8,\r\n+                ),\r\n+                CustomTextFormField(\r\n+                  controller: _lastNameController,\r\n+                  hintText: 'Last Name',\r\n+                  validator: (value) {\r\n+                    if (value?.isEmpty ?? true) {\r\n+                      return 'Enter your last name';\r\n+                    }\r\n+                    return null;\r\n+                  },\r\n+                  textInputType: TextInputType.text,\r\n+                ),\r\n+                const SizedBox(\r\n+                  height: 8,\r\n+                ),\r\n+                CustomTextFormField(\r\n+                  controller: _phoneNumberController,\r\n+                  hintText: 'Phone Number',\r\n+                  validator: (value) {\r\n+                    if (value?.isEmpty ?? true) {\r\n+                      return 'Enter your Valid Phone Number';\r\n+                    }\r\n+                    return null;\r\n+                  },\r\n+                  textInputType: TextInputType.number,\r\n+                ),\r\n+                const SizedBox(\r\n+                  height: 8,\r\n+                ),\r\n+                CustomTextFormField(\r\n+                  controller: _passwordController,\r\n+                  hintText: 'Password',\r\n+                  validator: (value) {\r\n+                    if (value?.isEmpty ?? true) {\r\n+                      return 'Enter your password';\r\n+                    }\r\n+                    return null;\r\n+                  },\r\n+                  textInputType: TextInputType.text,\r\n+                  obscureText: true,\r\n+                ),\r\n+                const SizedBox(height: 12),\r\n+                SizedBox(\r\n+                  width: double.infinity,\r\n+                  child: Visibility(\r\n+                    visible: _signUpInProgress == false,\r\n+                    replacement: const Center(\r\n+                      child: CircularProgressIndicator(),\r\n+                    ),\r\n+                    child: ElevatedButton(\r\n+                      onPressed: () {\r\n+                        if (_formKey.currentState!.validate()) {\r\n+                          userSignUp();\r\n+                        }\r\n+                      },\r\n+                      child: const Icon(\r\n+                        Icons.arrow_circle_right_outlined,\r\n+                        size: 20,\r\n+                      ),\r\n+                    ),\r\n+                  ),\r\n+                ),\r\n+                const SizedBox(\r\n+                  height: 20,\r\n+                ),\r\n+                Row(\r\n+                  mainAxisAlignment: MainAxisAlignment.center,\r\n+                  children: [\r\n+                    const Text(\r\n+                      \"Have an Account?\",\r\n+                      style: TextStyle(fontWeight: FontWeight.w500),\r\n+                    ),\r\n+                    const SizedBox(\r\n+                      width: 2,\r\n+                    ),\r\n+                    TextButton(\r\n+                      onPressed: () {\r\n+                        Navigator.push(\r\n+                            context,\r\n+                            MaterialPageRoute(\r\n+                                builder: (context) => const LoginScreen()));\r\n+                      },\r\n+                      child: const Text(\r\n+                        \"Login\",\r\n+                        style: TextStyle(letterSpacing: .7),\r\n+                      ),\r\n+                    ),\r\n+                  ],\r\n+                ),\r\n+              ],\r\n+            ),\r\n           ),\r\n         ),\r\n       )),\r\n     );\r\n"
                },
                {
                    "date": 1707190527451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n       ),\r\n       home: const DynamicForm(),\r\n     );\r\n   }*/\r\n-  Widget build(BuildContext context) {\r\n+/*  Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       \r\n       body: ScreenBackground(\r\n           child: SingleChildScrollView(\r\n@@ -229,7 +229,7 @@\n             ),\r\n           ),\r\n         ),\r\n       )),\r\n-    );\r\n-  } \r\n+    ); \r\n+  } */\r\n } \r\n"
                },
                {
                    "date": 1707190536155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,18 +73,18 @@\n     }\r\n   }\r\n \r\n   @override\r\n-/*  Widget build(BuildContext context) {\r\n+  Widget build(BuildContext context) {\r\n     return MaterialApp(\r\n       title: 'Flutter Demo',\r\n       theme: ThemeData(\r\n       \r\n         primarySwatch: Colors.blue,\r\n       ),\r\n       home: const DynamicForm(),\r\n     );\r\n-  }*/\r\n+  }\r\n /*  Widget build(BuildContext context) {\r\n     return Scaffold(\r\n       \r\n       body: ScreenBackground(\r\n"
                },
                {
                    "date": 1707240658689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n import 'package:flutter/material.dart';\r\n+import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/dynamic_form.dart';\r\n import 'package:task_manager_flutter/data/models/network_response.dart';\r\n import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n-import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/dynamic_form.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/screen_background.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/custom_text_form_field.dart';\r\n import 'package:task_manager_flutter/ui/screens/auth_screens/login_screen.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/custom_text_form_field.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/screen_background.dart';\r\n \r\n class SignUpFormScreen extends StatefulWidget {\r\n   const SignUpFormScreen({super.key});\r\n \r\n"
                }
            ],
            "date": 1707189426187,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:task_manager_flutter/data/models/network_response.dart';\r\nimport 'package:task_manager_flutter/data/services/network_caller.dart';\r\nimport 'package:task_manager_flutter/data/utils/api_links.dart';\r\nimport 'package:task_manager_flutter/ui/screens/auth_screens/login_screen.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/custom_text_form_field.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/screen_background.dart';\r\n\r\nclass SignUpFormScreen extends StatefulWidget {\r\n  const SignUpFormScreen({super.key});\r\n\r\n  @override\r\n  State<SignUpFormScreen> createState() => _SignUpFormScreenState();\r\n}\r\n\r\nclass _SignUpFormScreenState extends State<SignUpFormScreen> {\r\n  final TextEditingController _emailController = TextEditingController();\r\n\r\n  final TextEditingController _firstNameController = TextEditingController();\r\n\r\n  final TextEditingController _lastNameController = TextEditingController();\r\n\r\n  final TextEditingController _phoneNumberController = TextEditingController();\r\n\r\n  final TextEditingController _passwordController = TextEditingController();\r\n\r\n  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();\r\n\r\n  bool _signUpInProgress = false;\r\n\r\n  Future<void> userSignUp() async {\r\n    _signUpInProgress = true;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    Map<String, dynamic> requestBody = {\r\n      \"email\": _emailController.text.trim(),\r\n      \"firstName\": _firstNameController.text.trim(),\r\n      \"lastName\": _lastNameController.text.trim(),\r\n      \"phoneNumber\": _phoneNumberController.text.trim(),\r\n      \"password\": _passwordController.text,\r\n      \"photos\": \"\"\r\n    };\r\n\r\n    final NetworkResponse response =\r\n        await NetworkCaller().postRequest(ApiLinks.regestration, requestBody);\r\n    _signUpInProgress = false;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    if (response.isSuccess) {\r\n      _emailController.clear();\r\n      _firstNameController.clear();\r\n      _lastNameController.clear();\r\n      _phoneNumberController.clear();\r\n      _passwordController.clear();\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Registration Successful\"),\r\n          ),\r\n        );\r\n      }\r\n    } else {\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Registration Failed\"),\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n      \r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: const DynamicForm(),\r\n    );\r\n  }\r\n /* Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      body: ScreenBackground(\r\n          child: SingleChildScrollView(\r\n        child: Padding(\r\n          padding: const EdgeInsets.all(30),\r\n          child: Form(\r\n            key: _formKey,\r\n            child: Column(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: [\r\n                const SizedBox(\r\n                  height: 80,\r\n                ),\r\n                Text(\r\n                  \"Join Us\",\r\n                  style: Theme.of(context).textTheme.titleLarge,\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  controller: _emailController,\r\n                  hintText: 'Email',\r\n                  validator: (value) {\r\n                    if (value!.isEmpty ||\r\n                        !RegExp(r'^[\\w-.]+@([\\w-]+\\.)+\\w{2,5}')\r\n                            .hasMatch(value)) {\r\n                      return 'Email is required';\r\n                    }\r\n                    return null;\r\n                  },\r\n                  textInputType: TextInputType.emailAddress,\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  controller: _firstNameController,\r\n                  hintText: 'First Name',\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return 'Enter your first name';\r\n                    }\r\n                    return null;\r\n                  },\r\n                  textInputType: TextInputType.text,\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  controller: _lastNameController,\r\n                  hintText: 'Last Name',\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return 'Enter your last name';\r\n                    }\r\n                    return null;\r\n                  },\r\n                  textInputType: TextInputType.text,\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  controller: _phoneNumberController,\r\n                  hintText: 'Phone Number',\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return 'Enter your Valid Phone Number';\r\n                    }\r\n                    return null;\r\n                  },\r\n                  textInputType: TextInputType.number,\r\n                ),\r\n                const SizedBox(\r\n                  height: 8,\r\n                ),\r\n                CustomTextFormField(\r\n                  controller: _passwordController,\r\n                  hintText: 'Password',\r\n                  validator: (value) {\r\n                    if (value?.isEmpty ?? true) {\r\n                      return 'Enter your password';\r\n                    }\r\n                    return null;\r\n                  },\r\n                  textInputType: TextInputType.text,\r\n                  obscureText: true,\r\n                ),\r\n                const SizedBox(height: 12),\r\n                SizedBox(\r\n                  width: double.infinity,\r\n                  child: Visibility(\r\n                    visible: _signUpInProgress == false,\r\n                    replacement: const Center(\r\n                      child: CircularProgressIndicator(),\r\n                    ),\r\n                    child: ElevatedButton(\r\n                      onPressed: () {\r\n                        if (_formKey.currentState!.validate()) {\r\n                          userSignUp();\r\n                        }\r\n                      },\r\n                      child: const Icon(\r\n                        Icons.arrow_circle_right_outlined,\r\n                        size: 20,\r\n                      ),\r\n                    ),\r\n                  ),\r\n                ),\r\n                const SizedBox(\r\n                  height: 20,\r\n                ),\r\n                Row(\r\n                  mainAxisAlignment: MainAxisAlignment.center,\r\n                  children: [\r\n                    const Text(\r\n                      \"Have an Account?\",\r\n                      style: TextStyle(fontWeight: FontWeight.w500),\r\n                    ),\r\n                    const SizedBox(\r\n                      width: 2,\r\n                    ),\r\n                    TextButton(\r\n                      onPressed: () {\r\n                        Navigator.push(\r\n                            context,\r\n                            MaterialPageRoute(\r\n                                builder: (context) => const LoginScreen()));\r\n                      },\r\n                      child: const Text(\r\n                        \"Login\",\r\n                        style: TextStyle(letterSpacing: .7),\r\n                      ),\r\n                    ),\r\n                  ],\r\n                ),\r\n              ],\r\n            ),\r\n          ),\r\n        ),\r\n      )),\r\n    );\r\n  } */\r\n} \r\n"
        }
    ]
}