{
    "sourceFile": "lib/ui/screens/auth_screens/academia_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1708030791456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1708031969751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,8 +89,11 @@\n         _isLoading = false;\r\n       }\r\n     } else {\r\n       if (mounted) {\r\n+        mywidgets = [];\r\n+        mywidgets.add(const InputBuscarField(\r\n+            hint: \"Username\", obscure: false, icon: Icons.person_outline));\r\n         ScaffoldMessenger.of(context).showSnackBar(\r\n           const SnackBar(\r\n             content: Text(\"Task Added Failed\"),\r\n           ),\r\n"
                },
                {
                    "date": 1708032089427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n         mywidgets.add(const InputBuscarField(\r\n             hint: \"Username\", obscure: false, icon: Icons.person_outline));\r\n         ScaffoldMessenger.of(context).showSnackBar(\r\n           const SnackBar(\r\n-            content: Text(\"Task Added Failed\"),\r\n+            content: Text(\"Nenhuma academia cadastrada!\"),\r\n           ),\r\n         );\r\n         _isLoading = false;\r\n       }\r\n"
                },
                {
                    "date": 1708032649001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n     } else {\r\n       if (mounted) {\r\n         mywidgets = [];\r\n         mywidgets.add(const InputBuscarField(\r\n-            hint: \"Username\", obscure: false, icon: Icons.person_outline));\r\n+            hint: \"Buscar Academia\", obscure: false, icon: Icons.person_outline));\r\n         ScaffoldMessenger.of(context).showSnackBar(\r\n           const SnackBar(\r\n             content: Text(\"Nenhuma academia cadastrada!\"),\r\n           ),\r\n"
                },
                {
                    "date": 1708034162334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,8 +52,11 @@\n       \"cref\": '',\r\n       \"id\": 1,\r\n     };\r\n \r\n+    void onPresseds() => Navigator.push(context,\r\n+                MaterialPageRoute(builder: (context) => const AcademiaDynamicForm()));\r\n+\r\n     final NetworkResponse response =\r\n         await NetworkCaller().postRequest(ApiLinks.allAcademia, requestBody);\r\n     _addNewTaskLoading = false;\r\n     if (mounted) {\r\n@@ -66,9 +69,9 @@\n         dynamic data = response.body?['data'];\r\n         List<dynamic> datas = data['academiaDto'];\r\n         mywidgets = [];\r\n         mywidgets.add(const InputBuscarField(\r\n-            hint: \"Username\", obscure: false, icon: Icons.person_outline));\r\n+            hint: \"Username\", obscure: false, icon: Icons.person_outline, onPresseds: onPresseds));\r\n         for (var element in datas) {\r\n           mywidgets.add(\r\n             Row(\r\n               mainAxisAlignment: MainAxisAlignment.center,\r\n"
                },
                {
                    "date": 1708034212266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n import 'package:task_manager_flutter/data/models/network_response.dart';\r\n import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n import 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\n import 'package:task_manager_flutter/ui/widgets/itens_list_academia.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/academia_dynamic_form.dart';\r\n \r\n \r\n class AcademiaScreen extends StatefulWidget {\r\n   const AcademiaScreen({\r\n"
                },
                {
                    "date": 1708034237873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,153 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/home_fab.dart';\r\n+import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\n+import 'package:task_manager_flutter/ui/screens/update_profile.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/home_list_model.dart';\r\n+import 'package:task_manager_flutter/data/models/network_response.dart';\r\n+import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/itens_list_academia.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/academia_dynamic_form.dart';\r\n+\r\n+\r\n+class AcademiaScreen extends StatefulWidget {\r\n+  const AcademiaScreen({\r\n+    Key? key,\r\n+  }) : super(key: key);\r\n+\r\n+  @override\r\n+  State<AcademiaScreen> createState() => _AcademiaScreenState();\r\n+}\r\n+\r\n+final TextEditingController _taskNameController = TextEditingController();\r\n+final TextEditingController _taskDescriptionController =\r\n+    TextEditingController();\r\n+List<Widget> mywidgets = [];\r\n+bool _isLoading = false;\r\n+\r\n+class _AcademiaScreenState extends State<AcademiaScreen> {\r\n+  @override\r\n+  void initState() {\r\n+    findAllAcademia();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  bool standardSelected = false;\r\n+  bool filledSelected = false;\r\n+  bool tonalSelected = false;\r\n+  bool outlinedSelected = false;\r\n+  int count = 0;\r\n+\r\n+  void log(String message) => print(message);\r\n+\r\n+  bool _addNewTaskLoading = false;\r\n+\r\n+  Future<void> findAllAcademia() async {\r\n+    _isLoading = true;\r\n+    _addNewTaskLoading = true;\r\n+    if (mounted) {\r\n+      setState(() {});\r\n+    }\r\n+    Map<String, dynamic> requestBody = {\r\n+      \"cref\": '',\r\n+      \"id\": 1,\r\n+    };\r\n+\r\n+    void onPressedss() => Navigator.push(context,\r\n+                MaterialPageRoute(builder: (context) => const AcademiaDynamicForm()));\r\n+\r\n+    final NetworkResponse response =\r\n+        await NetworkCaller().postRequest(ApiLinks.allAcademia, requestBody);\r\n+    _addNewTaskLoading = false;\r\n+    if (mounted) {\r\n+      setState(() {});\r\n+    }\r\n+    if (response.isSuccess) {\r\n+      _taskNameController.clear();\r\n+      _taskDescriptionController.clear();\r\n+      if (mounted) {\r\n+        dynamic data = response.body?['data'];\r\n+        List<dynamic> datas = data['academiaDto'];\r\n+        mywidgets = [];\r\n+        mywidgets.add(const InputBuscarField(\r\n+            hint: \"Username\", obscure: false, icon: Icons.person_outline, onPresseds: onPressedss));\r\n+        for (var element in datas) {\r\n+          mywidgets.add(\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.center,\r\n+              crossAxisAlignment: CrossAxisAlignment.start,\r\n+              children: <Widget>[\r\n+                ListItensExample(\r\n+                  nome: element['codDadosPessoal']['nome'],\r\n+                  cpf: element['codDadosPessoal']['cpf'],\r\n+                  cref: element['cref'],\r\n+                  valor: element['vlrAula'],\r\n+                  foto: element['codDadosPessoal']['photo'],\r\n+                  id: element['id'],\r\n+                ),\r\n+              ],\r\n+            ),\r\n+          );\r\n+        }\r\n+        _isLoading = false;\r\n+      }\r\n+    } else {\r\n+      if (mounted) {\r\n+        mywidgets = [];\r\n+        mywidgets.add(const InputBuscarField(\r\n+            hint: \"Buscar Academia\", obscure: false, icon: Icons.person_outline));\r\n+        ScaffoldMessenger.of(context).showSnackBar(\r\n+          const SnackBar(\r\n+            content: Text(\"Nenhuma academia cadastrada!\"),\r\n+          ),\r\n+        );\r\n+        _isLoading = false;\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  List<HomeListModel> listModels = [\r\n+    HomeListModel(\r\n+      title: \"Academia - O Club\",\r\n+      assetIcon: \"assets/icons/gym_icon.png\",\r\n+    ),\r\n+    HomeListModel(\r\n+      title: \"Biometa Academia\",\r\n+      assetIcon: \"assets/icons/gym_icon.png\",\r\n+    ),\r\n+    HomeListModel(\r\n+      title: \"Academia Titanium Core\",\r\n+      assetIcon: \"assets/icons/gym_icon.png\",\r\n+    )\r\n+  ];\r\n+  refreshPage() {\r\n+    setState(() {});\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n+      backgroundColor: const Color(0xFF340A9C),\r\n+      appBar: userBanner(\r\n+        context,\r\n+        onTapped: () {\r\n+          Navigator.push(\r\n+              context,\r\n+              MaterialPageRoute(\r\n+                  builder: (context) => const UpdateProfileScreen()));\r\n+        },\r\n+      ),\r\n+      body: SingleChildScrollView(\r\n+        child: ConstrainedBox(\r\n+          constraints: const BoxConstraints(minHeight: 50),\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+            children: mywidgets,\r\n+          ),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1708034289011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,153 @@\n+import 'package:flutter/material.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/home_fab.dart';\r\n+import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\n+import 'package:task_manager_flutter/ui/screens/update_profile.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/home_list_model.dart';\r\n+import 'package:task_manager_flutter/data/models/network_response.dart';\r\n+import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/itens_list_academia.dart';\r\n+import 'package:task_manager_flutter/ui/widgets/academia_dynamic_form.dart';\r\n+\r\n+\r\n+class AcademiaScreen extends StatefulWidget {\r\n+  const AcademiaScreen({\r\n+    Key? key,\r\n+  }) : super(key: key);\r\n+\r\n+  @override\r\n+  State<AcademiaScreen> createState() => _AcademiaScreenState();\r\n+}\r\n+\r\n+final TextEditingController _taskNameController = TextEditingController();\r\n+final TextEditingController _taskDescriptionController =\r\n+    TextEditingController();\r\n+List<Widget> mywidgets = [];\r\n+bool _isLoading = false;\r\n+\r\n+class _AcademiaScreenState extends State<AcademiaScreen> {\r\n+  @override\r\n+  void initState() {\r\n+    findAllAcademia();\r\n+    super.initState();\r\n+  }\r\n+\r\n+  bool standardSelected = false;\r\n+  bool filledSelected = false;\r\n+  bool tonalSelected = false;\r\n+  bool outlinedSelected = false;\r\n+  int count = 0;\r\n+\r\n+  void log(String message) => print(message);\r\n+\r\n+  bool _addNewTaskLoading = false;\r\n+\r\n+  Future<void> findAllAcademia() async {\r\n+    _isLoading = true;\r\n+    _addNewTaskLoading = true;\r\n+    if (mounted) {\r\n+      setState(() {});\r\n+    }\r\n+    Map<String, dynamic> requestBody = {\r\n+      \"cref\": '',\r\n+      \"id\": 1,\r\n+    };\r\n+\r\n+    void onPressedss() => Navigator.push(context,\r\n+                MaterialPageRoute(builder: (context) => const AcademiaDynamicForm()));\r\n+\r\n+    final NetworkResponse response =\r\n+        await NetworkCaller().postRequest(ApiLinks.allAcademia, requestBody);\r\n+    _addNewTaskLoading = false;\r\n+    if (mounted) {\r\n+      setState(() {});\r\n+    }\r\n+    if (response.isSuccess) {\r\n+      _taskNameController.clear();\r\n+      _taskDescriptionController.clear();\r\n+      if (mounted) {\r\n+        dynamic data = response.body?['data'];\r\n+        List<dynamic> datas = data['academiaDto'];\r\n+        mywidgets = [];\r\n+        mywidgets.add(InputBuscarField(\r\n+            hint: \"Buscar Academia\", obscure: false, icon: Icons.person_outline, onPresseds: onPressedss));\r\n+        for (var element in datas) {\r\n+          mywidgets.add(\r\n+            Row(\r\n+              mainAxisAlignment: MainAxisAlignment.center,\r\n+              crossAxisAlignment: CrossAxisAlignment.start,\r\n+              children: <Widget>[\r\n+                ListItensExample(\r\n+                  nome: element['codDadosPessoal']['nome'],\r\n+                  cpf: element['codDadosPessoal']['cpf'],\r\n+                  cref: element['cref'],\r\n+                  valor: element['vlrAula'],\r\n+                  foto: element['codDadosPessoal']['photo'],\r\n+                  id: element['id'],\r\n+                ),\r\n+              ],\r\n+            ),\r\n+          );\r\n+        }\r\n+        _isLoading = false;\r\n+      }\r\n+    } else {\r\n+      if (mounted) {\r\n+        mywidgets = [];\r\n+        mywidgets.add(InputBuscarField(\r\n+            hint: \"Buscar Academia\", obscure: false, icon: Icons.person_outline, onPresseds: onPressedss));\r\n+        ScaffoldMessenger.of(context).showSnackBar(\r\n+          const SnackBar(\r\n+            content: Text(\"Nenhuma academia cadastrada!\"),\r\n+          ),\r\n+        );\r\n+        _isLoading = false;\r\n+      }\r\n+    }\r\n+  }\r\n+\r\n+  List<HomeListModel> listModels = [\r\n+    HomeListModel(\r\n+      title: \"Academia - O Club\",\r\n+      assetIcon: \"assets/icons/gym_icon.png\",\r\n+    ),\r\n+    HomeListModel(\r\n+      title: \"Biometa Academia\",\r\n+      assetIcon: \"assets/icons/gym_icon.png\",\r\n+    ),\r\n+    HomeListModel(\r\n+      title: \"Academia Titanium Core\",\r\n+      assetIcon: \"assets/icons/gym_icon.png\",\r\n+    )\r\n+  ];\r\n+  refreshPage() {\r\n+    setState(() {});\r\n+  }\r\n+\r\n+  @override\r\n+  Widget build(BuildContext context) {\r\n+    return Scaffold(\r\n+      floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n+      backgroundColor: const Color(0xFF340A9C),\r\n+      appBar: userBanner(\r\n+        context,\r\n+        onTapped: () {\r\n+          Navigator.push(\r\n+              context,\r\n+              MaterialPageRoute(\r\n+                  builder: (context) => const UpdateProfileScreen()));\r\n+        },\r\n+      ),\r\n+      body: SingleChildScrollView(\r\n+        child: ConstrainedBox(\r\n+          constraints: const BoxConstraints(minHeight: 50),\r\n+          child: Column(\r\n+            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n+            children: mywidgets,\r\n+          ),\r\n+        ),\r\n+      ),\r\n+    );\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1708034702535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n \r\n   @override\r\n   Widget build(BuildContext context) {\r\n     return Scaffold(\r\n-      floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n+    //  floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n       backgroundColor: const Color(0xFF340A9C),\r\n       appBar: userBanner(\r\n         context,\r\n         onTapped: () {\r\n@@ -150,310 +150,4 @@\n       ),\r\n     );\r\n   }\r\n }\r\n-import 'package:flutter/material.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/home_fab.dart';\r\n-import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\n-import 'package:task_manager_flutter/ui/screens/update_profile.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/home_list_model.dart';\r\n-import 'package:task_manager_flutter/data/models/network_response.dart';\r\n-import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/itens_list_academia.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/academia_dynamic_form.dart';\r\n-\r\n-\r\n-class AcademiaScreen extends StatefulWidget {\r\n-  const AcademiaScreen({\r\n-    Key? key,\r\n-  }) : super(key: key);\r\n-\r\n-  @override\r\n-  State<AcademiaScreen> createState() => _AcademiaScreenState();\r\n-}\r\n-\r\n-final TextEditingController _taskNameController = TextEditingController();\r\n-final TextEditingController _taskDescriptionController =\r\n-    TextEditingController();\r\n-List<Widget> mywidgets = [];\r\n-bool _isLoading = false;\r\n-\r\n-class _AcademiaScreenState extends State<AcademiaScreen> {\r\n-  @override\r\n-  void initState() {\r\n-    findAllAcademia();\r\n-    super.initState();\r\n-  }\r\n-\r\n-  bool standardSelected = false;\r\n-  bool filledSelected = false;\r\n-  bool tonalSelected = false;\r\n-  bool outlinedSelected = false;\r\n-  int count = 0;\r\n-\r\n-  void log(String message) => print(message);\r\n-\r\n-  bool _addNewTaskLoading = false;\r\n-\r\n-  Future<void> findAllAcademia() async {\r\n-    _isLoading = true;\r\n-    _addNewTaskLoading = true;\r\n-    if (mounted) {\r\n-      setState(() {});\r\n-    }\r\n-    Map<String, dynamic> requestBody = {\r\n-      \"cref\": '',\r\n-      \"id\": 1,\r\n-    };\r\n-\r\n-    void onPressedss() => Navigator.push(context,\r\n-                MaterialPageRoute(builder: (context) => const AcademiaDynamicForm()));\r\n-\r\n-    final NetworkResponse response =\r\n-        await NetworkCaller().postRequest(ApiLinks.allAcademia, requestBody);\r\n-    _addNewTaskLoading = false;\r\n-    if (mounted) {\r\n-      setState(() {});\r\n-    }\r\n-    if (response.isSuccess) {\r\n-      _taskNameController.clear();\r\n-      _taskDescriptionController.clear();\r\n-      if (mounted) {\r\n-        dynamic data = response.body?['data'];\r\n-        List<dynamic> datas = data['academiaDto'];\r\n-        mywidgets = [];\r\n-        mywidgets.add(const InputBuscarField(\r\n-            hint: \"Username\", obscure: false, icon: Icons.person_outline, onPresseds: onPressedss));\r\n-        for (var element in datas) {\r\n-          mywidgets.add(\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.center,\r\n-              crossAxisAlignment: CrossAxisAlignment.start,\r\n-              children: <Widget>[\r\n-                ListItensExample(\r\n-                  nome: element['codDadosPessoal']['nome'],\r\n-                  cpf: element['codDadosPessoal']['cpf'],\r\n-                  cref: element['cref'],\r\n-                  valor: element['vlrAula'],\r\n-                  foto: element['codDadosPessoal']['photo'],\r\n-                  id: element['id'],\r\n-                ),\r\n-              ],\r\n-            ),\r\n-          );\r\n-        }\r\n-        _isLoading = false;\r\n-      }\r\n-    } else {\r\n-      if (mounted) {\r\n-        mywidgets = [];\r\n-        mywidgets.add(const InputBuscarField(\r\n-            hint: \"Buscar Academia\", obscure: false, icon: Icons.person_outline));\r\n-        ScaffoldMessenger.of(context).showSnackBar(\r\n-          const SnackBar(\r\n-            content: Text(\"Nenhuma academia cadastrada!\"),\r\n-          ),\r\n-        );\r\n-        _isLoading = false;\r\n-      }\r\n-    }\r\n-  }\r\n-\r\n-  List<HomeListModel> listModels = [\r\n-    HomeListModel(\r\n-      title: \"Academia - O Club\",\r\n-      assetIcon: \"assets/icons/gym_icon.png\",\r\n-    ),\r\n-    HomeListModel(\r\n-      title: \"Biometa Academia\",\r\n-      assetIcon: \"assets/icons/gym_icon.png\",\r\n-    ),\r\n-    HomeListModel(\r\n-      title: \"Academia Titanium Core\",\r\n-      assetIcon: \"assets/icons/gym_icon.png\",\r\n-    )\r\n-  ];\r\n-  refreshPage() {\r\n-    setState(() {});\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n-      backgroundColor: const Color(0xFF340A9C),\r\n-      appBar: userBanner(\r\n-        context,\r\n-        onTapped: () {\r\n-          Navigator.push(\r\n-              context,\r\n-              MaterialPageRoute(\r\n-                  builder: (context) => const UpdateProfileScreen()));\r\n-        },\r\n-      ),\r\n-      body: SingleChildScrollView(\r\n-        child: ConstrainedBox(\r\n-          constraints: const BoxConstraints(minHeight: 50),\r\n-          child: Column(\r\n-            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-            children: mywidgets,\r\n-          ),\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n-import 'package:flutter/material.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/home_fab.dart';\r\n-import 'package:task_manager_flutter/data/utils/api_links.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\n-import 'package:task_manager_flutter/ui/screens/update_profile.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/home_list_model.dart';\r\n-import 'package:task_manager_flutter/data/models/network_response.dart';\r\n-import 'package:task_manager_flutter/data/services/network_caller.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/itens_list_academia.dart';\r\n-import 'package:task_manager_flutter/ui/widgets/academia_dynamic_form.dart';\r\n-\r\n-\r\n-class AcademiaScreen extends StatefulWidget {\r\n-  const AcademiaScreen({\r\n-    Key? key,\r\n-  }) : super(key: key);\r\n-\r\n-  @override\r\n-  State<AcademiaScreen> createState() => _AcademiaScreenState();\r\n-}\r\n-\r\n-final TextEditingController _taskNameController = TextEditingController();\r\n-final TextEditingController _taskDescriptionController =\r\n-    TextEditingController();\r\n-List<Widget> mywidgets = [];\r\n-bool _isLoading = false;\r\n-\r\n-class _AcademiaScreenState extends State<AcademiaScreen> {\r\n-  @override\r\n-  void initState() {\r\n-    findAllAcademia();\r\n-    super.initState();\r\n-  }\r\n-\r\n-  bool standardSelected = false;\r\n-  bool filledSelected = false;\r\n-  bool tonalSelected = false;\r\n-  bool outlinedSelected = false;\r\n-  int count = 0;\r\n-\r\n-  void log(String message) => print(message);\r\n-\r\n-  bool _addNewTaskLoading = false;\r\n-\r\n-  Future<void> findAllAcademia() async {\r\n-    _isLoading = true;\r\n-    _addNewTaskLoading = true;\r\n-    if (mounted) {\r\n-      setState(() {});\r\n-    }\r\n-    Map<String, dynamic> requestBody = {\r\n-      \"cref\": '',\r\n-      \"id\": 1,\r\n-    };\r\n-\r\n-    void onPresseds() => Navigator.push(context,\r\n-                MaterialPageRoute(builder: (context) => const AcademiaDynamicForm()));\r\n-\r\n-    final NetworkResponse response =\r\n-        await NetworkCaller().postRequest(ApiLinks.allAcademia, requestBody);\r\n-    _addNewTaskLoading = false;\r\n-    if (mounted) {\r\n-      setState(() {});\r\n-    }\r\n-    if (response.isSuccess) {\r\n-      _taskNameController.clear();\r\n-      _taskDescriptionController.clear();\r\n-      if (mounted) {\r\n-        dynamic data = response.body?['data'];\r\n-        List<dynamic> datas = data['academiaDto'];\r\n-        mywidgets = [];\r\n-        mywidgets.add(const InputBuscarField(\r\n-            hint: \"Username\", obscure: false, icon: Icons.person_outline, onPresseds: onPresseds));\r\n-        for (var element in datas) {\r\n-          mywidgets.add(\r\n-            Row(\r\n-              mainAxisAlignment: MainAxisAlignment.center,\r\n-              crossAxisAlignment: CrossAxisAlignment.start,\r\n-              children: <Widget>[\r\n-                ListItensExample(\r\n-                  nome: element['codDadosPessoal']['nome'],\r\n-                  cpf: element['codDadosPessoal']['cpf'],\r\n-                  cref: element['cref'],\r\n-                  valor: element['vlrAula'],\r\n-                  foto: element['codDadosPessoal']['photo'],\r\n-                  id: element['id'],\r\n-                ),\r\n-              ],\r\n-            ),\r\n-          );\r\n-        }\r\n-        _isLoading = false;\r\n-      }\r\n-    } else {\r\n-      if (mounted) {\r\n-        mywidgets = [];\r\n-        mywidgets.add(const InputBuscarField(\r\n-            hint: \"Buscar Academia\", obscure: false, icon: Icons.person_outline));\r\n-        ScaffoldMessenger.of(context).showSnackBar(\r\n-          const SnackBar(\r\n-            content: Text(\"Nenhuma academia cadastrada!\"),\r\n-          ),\r\n-        );\r\n-        _isLoading = false;\r\n-      }\r\n-    }\r\n-  }\r\n-\r\n-  List<HomeListModel> listModels = [\r\n-    HomeListModel(\r\n-      title: \"Academia - O Club\",\r\n-      assetIcon: \"assets/icons/gym_icon.png\",\r\n-    ),\r\n-    HomeListModel(\r\n-      title: \"Biometa Academia\",\r\n-      assetIcon: \"assets/icons/gym_icon.png\",\r\n-    ),\r\n-    HomeListModel(\r\n-      title: \"Academia Titanium Core\",\r\n-      assetIcon: \"assets/icons/gym_icon.png\",\r\n-    )\r\n-  ];\r\n-  refreshPage() {\r\n-    setState(() {});\r\n-  }\r\n-\r\n-  @override\r\n-  Widget build(BuildContext context) {\r\n-    return Scaffold(\r\n-      floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n-      backgroundColor: const Color(0xFF340A9C),\r\n-      appBar: userBanner(\r\n-        context,\r\n-        onTapped: () {\r\n-          Navigator.push(\r\n-              context,\r\n-              MaterialPageRoute(\r\n-                  builder: (context) => const UpdateProfileScreen()));\r\n-        },\r\n-      ),\r\n-      body: SingleChildScrollView(\r\n-        child: ConstrainedBox(\r\n-          constraints: const BoxConstraints(minHeight: 50),\r\n-          child: Column(\r\n-            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n-            children: mywidgets,\r\n-          ),\r\n-        ),\r\n-      ),\r\n-    );\r\n-  }\r\n-}\r\n"
                }
            ],
            "date": 1708030791456,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/home_fab.dart';\r\nimport 'package:task_manager_flutter/data/utils/api_links.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/user_banners.dart';\r\nimport 'package:task_manager_flutter/ui/screens/update_profile.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/home_list_model.dart';\r\nimport 'package:task_manager_flutter/data/models/network_response.dart';\r\nimport 'package:task_manager_flutter/data/services/network_caller.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/input_field_busca.dart';\r\nimport 'package:task_manager_flutter/ui/widgets/itens_list_academia.dart';\r\n\r\n\r\nclass AcademiaScreen extends StatefulWidget {\r\n  const AcademiaScreen({\r\n    Key? key,\r\n  }) : super(key: key);\r\n\r\n  @override\r\n  State<AcademiaScreen> createState() => _AcademiaScreenState();\r\n}\r\n\r\nfinal TextEditingController _taskNameController = TextEditingController();\r\nfinal TextEditingController _taskDescriptionController =\r\n    TextEditingController();\r\nList<Widget> mywidgets = [];\r\nbool _isLoading = false;\r\n\r\nclass _AcademiaScreenState extends State<AcademiaScreen> {\r\n  @override\r\n  void initState() {\r\n    findAllAcademia();\r\n    super.initState();\r\n  }\r\n\r\n  bool standardSelected = false;\r\n  bool filledSelected = false;\r\n  bool tonalSelected = false;\r\n  bool outlinedSelected = false;\r\n  int count = 0;\r\n\r\n  void log(String message) => print(message);\r\n\r\n  bool _addNewTaskLoading = false;\r\n\r\n  Future<void> findAllAcademia() async {\r\n    _isLoading = true;\r\n    _addNewTaskLoading = true;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    Map<String, dynamic> requestBody = {\r\n      \"cref\": '',\r\n      \"id\": 1,\r\n    };\r\n\r\n    final NetworkResponse response =\r\n        await NetworkCaller().postRequest(ApiLinks.allAcademia, requestBody);\r\n    _addNewTaskLoading = false;\r\n    if (mounted) {\r\n      setState(() {});\r\n    }\r\n    if (response.isSuccess) {\r\n      _taskNameController.clear();\r\n      _taskDescriptionController.clear();\r\n      if (mounted) {\r\n        dynamic data = response.body?['data'];\r\n        List<dynamic> datas = data['academiaDto'];\r\n        mywidgets = [];\r\n        mywidgets.add(const InputBuscarField(\r\n            hint: \"Username\", obscure: false, icon: Icons.person_outline));\r\n        for (var element in datas) {\r\n          mywidgets.add(\r\n            Row(\r\n              mainAxisAlignment: MainAxisAlignment.center,\r\n              crossAxisAlignment: CrossAxisAlignment.start,\r\n              children: <Widget>[\r\n                ListItensExample(\r\n                  nome: element['codDadosPessoal']['nome'],\r\n                  cpf: element['codDadosPessoal']['cpf'],\r\n                  cref: element['cref'],\r\n                  valor: element['vlrAula'],\r\n                  foto: element['codDadosPessoal']['photo'],\r\n                  id: element['id'],\r\n                ),\r\n              ],\r\n            ),\r\n          );\r\n        }\r\n        _isLoading = false;\r\n      }\r\n    } else {\r\n      if (mounted) {\r\n        ScaffoldMessenger.of(context).showSnackBar(\r\n          const SnackBar(\r\n            content: Text(\"Task Added Failed\"),\r\n          ),\r\n        );\r\n        _isLoading = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  List<HomeListModel> listModels = [\r\n    HomeListModel(\r\n      title: \"Academia - O Club\",\r\n      assetIcon: \"assets/icons/gym_icon.png\",\r\n    ),\r\n    HomeListModel(\r\n      title: \"Biometa Academia\",\r\n      assetIcon: \"assets/icons/gym_icon.png\",\r\n    ),\r\n    HomeListModel(\r\n      title: \"Academia Titanium Core\",\r\n      assetIcon: \"assets/icons/gym_icon.png\",\r\n    )\r\n  ];\r\n  refreshPage() {\r\n    setState(() {});\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    return Scaffold(\r\n      floatingActionButton: getHomeFab(context, listModels, refreshPage),\r\n      backgroundColor: const Color(0xFF340A9C),\r\n      appBar: userBanner(\r\n        context,\r\n        onTapped: () {\r\n          Navigator.push(\r\n              context,\r\n              MaterialPageRoute(\r\n                  builder: (context) => const UpdateProfileScreen()));\r\n        },\r\n      ),\r\n      body: SingleChildScrollView(\r\n        child: ConstrainedBox(\r\n          constraints: const BoxConstraints(minHeight: 50),\r\n          child: Column(\r\n            mainAxisAlignment: MainAxisAlignment.spaceEvenly,\r\n            children: mywidgets,\r\n          ),\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}